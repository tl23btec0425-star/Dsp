#include<stdio.h>
#include<math.h>
#define PI 3.14

typedef struct
{
    float real, imag;
} com;

void main()
{
    com xx[4], x[4], temp[4], y[4], a[4], w[4];
    int i, j=0;

    printf("\n\nEnter 4-point input complex number sequence==\n");
    for(i=0; i<4; i++)
    {
        scanf("%f", &xx[i].real);
        scanf("%f", &xx[i].imag);
    }

    for(i=0; i<4; i+=2)
    {
        x[j].real = xx[i].real;
        x[j].imag = xx[i].imag;
        x[j+1].real = xx[i+2].real;
        x[j+1].imag = xx[i+2].imag;
        i=i-1;
        j=j+2;
    }

    for(i=0; i<2; i++)
    {
        w[i].real = cos(2*PI*i/4);
        w[i].imag = sin(2*PI*i/4);
    }

    for(i=0; i<4; i+=2)
    {
        temp[i].real = x[i].real + x[i+1].real;
        temp[i].imag = x[i].imag + x[i+1].imag;

        temp[i+1].real = x[i].real - x[i+1].real;
        temp[i+1].imag = x[i].imag - x[i+1].imag;
    }

    j=2;

    a[i].real = temp[i].real*w[0].real - temp[i].imag*w[0].imag + temp[i-2].real;
    a[i].imag = temp[i].real*w[0].imag + temp[i].imag*w[0].real + temp[i-2].imag;
    a[i+1].real = temp[i-2].real - (temp[i].real*w[1].real - temp[i].imag*w[1].imag);
    a[i+1].imag = temp[i-2].imag - (temp[i].real*w[1].imag + temp[i].imag*w[1].real);

    temp[i].real=a[i].real;
    temp[i].imag=a[i].imag;
    temp[i+1].real=a[i+1].real;
    temp[i+1].imag=a[i+1].imag;

    for(i=0; i<2; i++)
    {
        y[i].real = temp[i].real + temp[i+2].real;
        y[i].imag = temp[i].imag + temp[i+2].imag;
        y[i+2].real = temp[i].real - temp[i+2].real;
        y[i+2].imag = temp[i].imag - temp[i+2].imag;
    }

    printf("\nDFT values==\n");
    for(i=0; i<4; i++)
    {
        printf("\nF(%d)=(%.01f)t", i, y[i].real, y[i].imag);
    }
}
